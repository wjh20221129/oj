//自定义qsort函数
#include<stdio.h>
void swap(void* pa,void* pb,int size)
{
	int i = 0;
	for (i = 0; i < size; i++)
	{
		char temp = *((char*)pa+i);
		*((char*)pa+i) = *((char*)pb+i);
		*((char*)pb+i) = temp;
	}
}
int cmp1(const void* pa, const void* pb)
{
	return (*(int*)pa - *(int*)pb);
}
int cmp2(const void* pa, const void* pb)
{
	return strcmp((char*)pa , (char*)pb);
}

void my_qsort(void* base, int sz, int width, int (*cmp)(const void* p1, const void* p2)) 
{
	int i = 0;
	for (i = 0; i < sz - 1; i++)
	{
		for (int j = 0; j < sz - 1 - i; j++)
		{
			if (cmp((char*)base + j * width, (char*)base + (j + 1) * width) > 0)
				swap((char*)base + j * width, (char*)base + (j + 1) * width,width);
		}
	}
}
int main()
{
	int arr[] = { 10,9,8,7,6,5,4,3,2,1};
	char brr[] = { "daasvhbnx" };
	int width1 = sizeof(arr[0]);
	int width2= sizeof(brr[0]);
	int sz1 = sizeof(arr) / sizeof(arr[0]);
	int sz2 = sizeof(brr) / sizeof(brr[0]);
	my_qsort(arr, sz1, width1, cmp1);
	my_qsort(brr, sz2, width2, cmp2);
	for (int i = 0; i < sz1; i++)
		printf("%d ", arr[i]);
	printf("\n");
	for (int i = 0; i < sz2; i++)
		printf("%c", brr[i]);
	return 0;
}
